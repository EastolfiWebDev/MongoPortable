{
  "name": "Mongo Portable",
  "tagline": "Solution for a MongoDB-like portable database",
  "body": "# MongoPortable\r\nSolution for a MongoDB-like portable database.\r\n\r\n[![Package Version][npm-image]][npm-url]\r\n[![NodeJS Version][node-image]][node-url]\r\n\r\n[![Linux Build][travis-image]][travis-url]\r\n[![Windows Build][appveyor-image]][appveyor-url]\r\n[![Codeship Build][codeship-image]][codeship-url]\r\n\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n[![Downloads][downloads-image]][npm-url]\r\n[![Documentation Status][docs-image]][docs-url]\r\n\r\nIt handles the collections and documents in memory, and allow the use of stores for persistence.\r\n\r\n# Installation\r\n```shell\r\nnpm install --save mongo-portable\r\n```\r\n# Usage\r\n```javascript\r\n// Declaring the module dependency\r\nvar MongoPortable = require(\"mongo-portable\");\r\n\r\n// Instantiates a new ddbb object by passing a ddbb name\r\nvar db = new MongoPortable(\"TEST\");\r\n\r\n// Creates a new collection named \"users\" \r\n//      (if it's already created, it will just return it instead)\r\nvar users = db.collection(\"users\");\r\n\r\n// Inserts a new document into the collection\r\nvar document = users.insert({ name: \"John\", lastName: \"Abruzzi\" });\r\nconsole.log(document);  // -> { name: \"John\", lastName: \"Abruzzi\" }\r\n\r\n// Creates a cursor with the query information, ready to be fetched\r\nvar cursor = users.find({ name: \"John\" });\r\n\r\n// Iterates over the cursor, obtaining each document that matchs the query\r\ncursor.forEach(function(doc) {\r\n    console.log(doc);  // -> { name: \"John\", lastName: \"Abruzzi\" }\r\n});\r\n```\r\n\r\n# Modules\r\nThe modules visibles for an application are [MongoPortable](#MongoPortable), [Collection](#Collection) and [Cursor](#Cursor).\r\n\r\n## MongoPortable\r\nHandles the database, collections and connections.\r\n\r\nRead the full API documentation [here][API-MongoPortable]\r\n\r\n## Collection\r\nHandles the list of documents by using cursors.\r\n\r\nRead the full API documentation [here][API-Collection]\r\n\r\n## Cursor\r\nFetchs and access the documents to return them to the client.\r\n\r\nRead the full API documentation [here][API-Cursor]\r\n\r\n----------\r\n\r\n# Stores\r\n## File System Store\r\nIt is located in a separated module, so install it by:\r\n```shell\r\nnpm install --save file-system-store\r\n```\r\nAnd then use it in your application by adding it in your MongoPortable instance:\r\n```javascript\r\nvar FileSystemStore = require(\"file-system-store\");\r\ndb.addStore(FileSystemStore);\r\n```\r\nor as a middleware:\r\n```javascript\r\nvar FileSystemStore = require(\"file-system-store\");\r\ndb.use(\"store\", FileSystemStore);\r\n```\r\n\r\nView the package [here][Module-FileSystemStore] and read the full API documentation [here][API-FileSystemStore]\r\n\r\n----------\r\n\r\n## TO-DO List\r\n### Database Operations\r\n- [ ] DDBB\r\n    * [X] .use() (Middleware)\r\n    * [X] .addStore()\r\n    * [X] .dropDatabase()\r\n    * [ ] Connections\r\n- [ ] Collections\r\n    * [ ] .collectionsInfo()\r\n    * [X] .collections()\r\n    * [X] .collectionNames()\r\n    * [X] .collection()\r\n    * [X] .dropCollection()\r\n    * [X] .renameCollection()\r\n    * [X] .dropCollection()\r\n    * [X] .dropCollection()\r\n    * [X] .dropCollection()\r\n- [ ] Indexes\r\n    * [ ] .createIndex()\r\n    * [ ] .ensureIndex()\r\n    * [ ] .dropIndex()\r\n    * [ ] .reIndex()\r\n    * [ ] .indexInformation()\r\n- [ ] [db.runCommand()][Mongo-db-command]\r\n    * [ ] User Commands\r\n    * [ ] Database Operations\r\n    * [ ] Internal Commands\r\n    * [ ] Testing Commands\r\n    * [ ] Auditing Commands\r\n\r\nRead the full API documentation [here][API-MongoPortable]\r\n\r\n----------\r\n\r\n## Collection\r\n- [X] Creating\r\n    * [X] .insert()\r\n- [X] Reading\r\n    * [X] .find()\r\n    * [X] .findOne()\r\n- [X] Updating\r\n    * [X] .update()\r\n- [X] Deleting\r\n    * [X] .remove()\r\n\r\nRead the full API documentation [here][API-Collection]\r\n\r\n----------\r\n\r\n## Cursor\r\n- [X] Fetching\r\n    * [X] .rewind()\r\n    * [X] .forEach()\r\n    * [X] .map()\r\n    * [X] .hasNext()\r\n    * [X] .next()\r\n    * [X] .fetchAll()\r\n    * [X] .fetchOne()\r\n    * [X] .count()\r\n    * [X] .sort()\r\n    * [X] .skip()\r\n    * [X] .limit()\r\n- [ ] Managing\r\n    * [ ] .batchSize()\r\n    * [ ] .close()\r\n    * [ ] .comment()\r\n    * [ ] .explain()\r\n    * [ ] .hint()\r\n    * [ ] .itcount()\r\n    * [ ] .maxScan()\r\n    * [ ] .maxTimeMS()\r\n    * [ ] .max()\r\n    * [ ] .min()\r\n    * [ ] .noCursorTimeout()\r\n    * [ ] .objsLeftInBatch()\r\n    * [ ] .pretty()\r\n    * [ ] .readConcern()\r\n    * [ ] .readPref()\r\n    * [ ] .returnKey()\r\n    * [ ] .showRecordId()\r\n    * [ ] .size()\r\n    * [ ] .snapshot()\r\n    * [ ] .tailable()\r\n    * [ ] .toArray()\r\n\r\nRead the full API documentation [here][API-Cursor]\r\n\r\n----------\r\n\r\n# License\r\n\r\nMIT\r\n\r\n[mongo-db-command]: https://docs.mongodb.com/manual/reference/command/\r\n\r\n[API-MongoPortable]: https://github.com/EastolfiWebDev/MongoPortable/blob/master/api/MongoPortable.md\r\n[API-Collection]: https://github.com/EastolfiWebDev/MongoPortable/blob/master/api/Collection.md\r\n[API-Cursor]: https://github.com/EastolfiWebDev/MongoPortable/blob/master/api/Cursor.md\r\n\r\n[Module-FileSystemStore]: https://github.com/EastolfiWebDev/FileSystemStore\r\n[API-FileSystemStore]: https://github.com/EastolfiWebDev/FileSystemStore/blob/master/api/FileSystemStore.md\r\n\r\n[npm-image]: https://img.shields.io/npm/v/mongo-portable.svg?label=Package%20Version\r\n[npm-url]: https://www.npmjs.com/package/mongo-portable\r\n[node-image]: https://img.shields.io/badge/node-v4.4.0-blue.svg?label=Node%20Version\r\n[node-url]: https://nodejs.org/en/\r\n[travis-image]: https://img.shields.io/travis/EastolfiWebDev/MongoPortable.svg?label=linux\r\n[travis-url]: https://travis-ci.org/EastolfiWebDev/MongoPortable\r\n[appveyor-image]: https://img.shields.io/appveyor/ci/eastolfi/MongoPortable/master.svg?label=windows\r\n[appveyor-url]: https://ci.appveyor.com/project/eastolfi/mongoportable\r\n[codeship-image]: https://codeship.com/projects/d57e8820-5e10-0134-8b6d-42ae3f63aed8/status?branch=master\r\n[codeship-url]: https://codeship.com/projects/174143\r\n\r\n[coveralls-image]: https://coveralls.io/repos/github/EastolfiWebDev/MongoPortable/badge.svg?branch=master\r\n[coveralls-url]: https://coveralls.io/github/EastolfiWebDev/MongoPortable?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dt/mongo-portable.svg\r\n[docs-image]: https://readthedocs.org/projects/mongoportable/badge/?version=latest\r\n[docs-url]: http://mongoportable.readthedocs.io/en/latest/?badge=latest\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}