{"version":3,"sources":["collection/Collection.ts"],"names":[],"mappings":"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","file":"Collection.js","sourcesContent":["import * as _                           from \"lodash\";\nimport { JSWLogger }                    from \"jsw-logger\";\n\nimport { Cursor }                       from \"./Cursor\";\n\nimport { EventEmitter }                 from \"../emitter\";\nimport { Aggregation }                  from \"../aggregation\";\nimport { Selector, SelectorMatcher }    from \"../selector\";\nimport { ObjectId }                     from \"../document\";\n\n/**\n * Gets the size of an object.\n * \n * @method Object#size\n * \n * @param {Object} obj - The object\n * \n * @returns {Number} The size of the object\n */\nvar getObjectSize = function(obj) {\n    var size = 0, \n        key;\n    \n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            size++;\n        }\n    }\n    \n    return size;\n};\n\n// module.exports = function(Aggregation, Cursor, Selector, SelectorMatcher, ObjectId, EventEmitter, Logger, _) {\n    \n/**\n * Collection\n * \n * @module Collection\n * @constructor\n * @since 0.0.1\n * @author Eduardo Astolfi <eastolfi91@gmail.com>\n * @copyright 2016 Eduardo Astolfi <eastolfi91@gmail.com>\n * @license MIT Licensed\n * \n * @classdesc Collection class that maps a MongoDB-like collection\n */\nvar database = null;\nclass Collection /*extends EventEmitter*/ {\n    protected logger: JSWLogger;\n    \n    name;\n    databaseName;\n    fullName;\n    docs;\n    doc_indexes;\n    snapshots;\n    // opts;\n    emit: Function;\n    \n// var Collection = function(db, collectionName, options) {\n    \n    /**\n     * @param {MongoPortable} db - Additional options\n     * @param {String} collectionName - The name of the collection\n     * @param {Object} [options] - Database object\n     * \n     * @param {Object} [options.pkFactory=null] - Object overriding the basic \"ObjectId\" primary key generation.\n     */\n    constructor(db, collectionName/*, options*/) {\n        // super(options.log || {});\n        // super();\n        \n        if (!(this instanceof Collection)) return new Collection(db, collectionName/*, options*/);\n        \n        this.logger = JSWLogger.instance;\n    \n        if (_.isNil(db)) this.logger.throw(\"db parameter required\");\n        \n        if (_.isNil(collectionName)) this.logger.throw(\"collectionName parameter required\");\n        \n        // if (_.isNil(options) || !_.isPlainObject(options)) options = {};\n        \n        Collection.checkCollectionName(collectionName);\n    \n        // this.db = db;\n        database = db;\n        this.name = collectionName;\n        this.databaseName = db._databaseName;\n        this.fullName = this.databaseName + '.' + this.name;\n        this.docs = [];\n        this.doc_indexes = {};\n        this.snapshots = [];\n        // this.opts = {}; // Default options\n        \n        // _.merge(this.opts, options);\n        \n        this.emit = (name, args) => {\n            db.emit(name, args);\n        };\n    }\n    \n    // emit(name, args) {\n    //     super.emit(name, args, database._stores);\n    // }\n    \n    /**\n     * @ignore\n     */\n    static _noCreateModifiers = {\n        $unset: true,\n        $pop: true,\n        $rename: true,\n        $pull: true,\n        $pullAll: true\n    }\n    \n    /**\n     * @ignore\n     */\n    static checkCollectionName(collectionName) {\n        if (!_.isString(collectionName)) {\n            JSWLogger.instance.throw(\"collection name must be a String\");\n        }\n    \n        if (!collectionName || collectionName.indexOf('..') !== -1) {\n            JSWLogger.instance.throw(\"collection names cannot be empty\");\n        }\n    \n        if (collectionName.indexOf('$') !== -1 && collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) === null) {\n            JSWLogger.instance.throw(\"collection names must not contain '$'\");\n        }\n    \n        if (collectionName.match(/^system\\./) !== null) {\n            JSWLogger.instance.throw(\"collection names must not start with 'system.' (reserved for internal use)\");\n        }\n        \n        if (collectionName.match(/^\\.|\\.$/) !== null) {\n            JSWLogger.instance.throw(\"collection names must not start or end with '.'\");\n        }\n    }\n    \n    // TODO enforce rule that field names can't start with '$' or contain '.'\n    // (real mongodb does in fact enforce this)\n    // TODO possibly enforce that 'undefined' does not appear (we assume\n    // this in our handling of null and $exists)\n    /**\n     * Inserts a document into the collection\n     * \n     * @method Collection#insert\n     * \n     * @param {Object} doc - Document to be inserted\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Boolean} [options.chain=false] - If set to \"true\" returns this instance, so it can be chained with other methods\n     * \n     * @param {Function} [callback=null] Callback function to be called at the end with the results\n     * \n     * @returns {Object|Collection} If \"options.chain\" set to \"true\" returns this instance, otherwise returns the inserted document\n     */\n    insert = function (doc, options, callback) {\n        if (_.isNil(doc)) this.logger.throw(\"doc parameter required\");\n        \n        if (!_.isPlainObject(doc)) this.logger.throw(\"doc must be an object\");\n        \n        if (_.isNil(options)) options = {};\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        // Creating a safe copy of the document\n        var _doc = _.cloneDeep(doc);\n    \n        // If the document comes with a number ID, parse it to String\n        if (_.isNumber(_doc._id)) {\n            _doc._id = _.toString(_doc._id);\n        }\n    \n        if (_.isNil(_doc._id) || (!(_doc._id instanceof ObjectId) && (!_.isString(_doc._id) || !_doc._id.length))) {\n            _doc._id = new ObjectId();\n        }\n    \n        // Add options to more dates\n        _doc.timestamp = new ObjectId().generationTime;\n        \n        // Reverse\n        this.doc_indexes[_.toString(_doc._id)] = this.docs.length;\n        this.docs.push(_doc);\n        \n        /**\n         * \"insert\" event.\n         *\n         * @event MongoPortable~insert\n         * \n         * @param {Object} collection - Information about the collection\n         * @param {Object} doc - Information about the document inserted\n         */\n        this.emit(\n            'insert',\n            {\n                collection: this,\n                doc: _doc\n            }\n        );\n    \n        if (callback) callback(null, _doc);\n    \n        if (options.chain) return this;\n        \n        return _doc;\n    }\n    \n    /**\n     * Inserts several documents into the collection\n     * \n     * @method Collection#bulkInsert\n     * \n     * @param {Array} docs - Documents to be inserted\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Boolean} [options.chain=false] - If set to \"true\" returns this instance, so it can be chained with other methods\n     * \n     * @param {Function} [callback=null] Callback function to be called at the end with the results\n     * \n     * @returns {Object|Collection} If \"options.chain\" set to \"true\" returns this instance, otherwise returns the inserted document\n     */\n    bulkInsert = function (docs, options, callback) {\n        if (_.isNil(docs)) this.logger.throw(\"docs parameter required\");\n        \n        if (!_.isArray(docs)) this.logger.throw(\"docs must be an array\");\n        \n        if (_.isNil(options)) options = {};\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        var _docs = [];\n        \n        for (let i = 0; i < docs.length; i++) {\n            let doc = docs[i];\n            \n            _docs.push(this.insert(doc, options));\n        }\n        \n        if (callback) callback(null, _docs);\n    \n        if (options.chain) return this;\n        \n        return _docs;\n    }\n    \n    /**\n     * Finds all matching documents\n     * \n     * @method Collection#find\n     * \n     * @param {Object|Array|String} [selection={}] - The selection for matching documents\n     * @param {Object|Array|String} [fields={}] - The fields of the document to show\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Number} [options.skip] - Number of documents to be skipped\n     * @param {Number} [options.limit] - Max number of documents to display\n     * @param {Object|Array|String} [options.fields] - Same as \"fields\" parameter (if both passed, \"options.fields\" will be ignored)\n     * @param {Boolean} [options.forceFetch=false] - If set to'\"true\" returns the array of documents already fetched\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Array|Cursor} If \"options.forceFetch\" set to true returns the array of documents, otherwise returns a cursor\n     */\n    find = function (selection, fields, options, callback) {\n        let params = _ensureFindParams({\n            selection: selection, \n            fields: fields,\n            options: options, \n            callback: callback\n        });\n        \n        selection = params.selection;\n        fields = params.fields;\n        options = params.options;\n        callback = params.callback;\n    \n        /**\n         * \"find\" event.\n         *\n         * @event MongoPortable~find\n         * \n         * @property {Object} collection - Information about the collection\n         * @property {Object} selector - The selection of the query\n         * @property {Object} fields - The fields showed in the query\n         */\n        this.emit(\n            'find',\n            {\n                collection: this,\n                selector: selection,\n                fields: fields\n            }\n        );\n        \n        var cursor = new Cursor(this.docs, selection, fields, options);\n        \n        // Pass the cursor fetched to the callback\n        // Add [options.noFetchCallback = true]\n        if (callback) callback(null, cursor.fetch());\n    \n        if (options.forceFetch) {\n            return cursor.fetch();\n        } else {\n            return cursor;\n        }\n    }\n    \n    /**\n     * Finds the first matching document\n     * \n     * @method Collection#findOne\n     * \n     * @param {Object|Array|String} [selection={}] - The selection for matching documents\n     * @param {Object|Array|String} [fields={}] - The fields of the document to show\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Number} [options.skip] - Number of documents to be skipped\n     * @param {Number} [options.limit] - Max number of documents to display\n     * @param {Object|Array|String} [options.fields] - Same as \"fields\" parameter (if both passed, \"options.fields\" will be ignored)\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Object} Returns the first matching document of the collection\n     */\n    findOne = function (selection, fields, options, callback) {\n        let params = _ensureFindParams({\n            selection: selection, \n            fields: fields,\n            options: options, \n            callback: callback\n        });\n        \n        selection = params.selection;\n        fields = params.fields;\n        options = params.options;\n        callback = params.callback;\n        \n        /**\n         * \"findOne\" event.\n         *\n         * @event MongoPortable~findOne\n         * \n         * @property {Object} collection - Information about the collection\n         * @property {Object} selector - The selection of the query\n         * @property {Object} fields - The fields showed in the query\n         */\n        this.emit(\n            'findOne',\n            {\n                collection: this,\n                selector: selection,\n                fields: fields\n            }\n        );\n        \n        var cursor = new Cursor(this.docs, selection, fields, options);\n        \n        var res = null;\n        \n        if (cursor.hasNext()) {\n            res = cursor.next();\n        }\n        \n        // Pass the cursor fetched to the callback\n        // Add [options.noFetchCallback = true]\n        if (callback) callback(null, res);\n        \n        return res;\n    }\n    \n    \n    /**\n     * Updates one or many documents\n     * \n     * @method Collection#update\n     * \n     * @param {Object|Array|String} [selection={}] - The selection for matching documents\n     * @param {Object} [update={}] - The update operation\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Number} [options.updateAsMongo=true] - By default: \n     *      If the [update] object contains update operator modifiers, such as those using the \"$set\" modifier, then:\n     *          <ul>\n     *              <li>The [update] object must contain only update operator expressions</li>\n     *              <li>The Collection#update method updates only the corresponding fields in the document</li>\n     *          <ul>\n     *      If the [update] object contains only \"field: value\" expressions, then:\n     *          <ul>\n     *              <li>The Collection#update method replaces the matching document with the [update] object. The Collection#update method does not replace the \"_id\" value</li>\n     *              <li>Collection#update cannot update multiple documents</li>\n     *          <ul>\n     * \n     * @param {Number} [options.override=false] - Replaces the whole document (only apllies when [updateAsMongo=false])\n     * @param {Number} [options.upsert=false] - Creates a new document when no document matches the query criteria\n     * @param {Number} [options.multi=false] - Updates multiple documents that meet the criteria\n     * @param {Object} [options.writeConcern=null] - An object expressing the write concern\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Object} Object with the update/insert (if upsert=true) information\n     */\n    update = function (selection, update, options, callback) {\n        if (_.isNil(selection)) selection = {};\n        \n        if (_.isNil(update)) this.logger.throw(\"You must specify the update operation\");\n        \n        if (_.isNil(options)) {\n            options = {\n                skip: 0,\n                limit: 15   // for no limit pass [options.limit = -1]\n            };\n        }\n        \n        if (_.isFunction(selection)) this.logger.throw(\"You must specify the update operation\");\n        \n        if (_.isFunction(update)) this.logger.throw(\"You must specify the update operation\");\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        // Check special case where we are using an objectId\n        if(selection instanceof ObjectId) {\n            selection = {\n                _id: selection\n            };\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n    \n        var res = null;\n    \n        var docs = null;\n        if (options.multi) {\n            docs = this.find(selection, null, { forceFetch: true });\n        } else {\n            docs = this.findOne(selection);\n        }\n        \n        if (_.isNil(docs)) {\n            docs = [];\n        }\n        \n        if (!_.isArray(docs)) {\n            docs = [docs];\n        }\n        \n        if (docs.length === 0) {\n            if (options.upsert) {\n                var inserted = this.insert(update);\n    \n                res = {\n                    updated: {\n                        documents: null,\n                        count: 0\n                    },\n                    inserted: {\n                        documents: [inserted],\n                        count: 1\n                    }\n                };\n            } else {\n                // No documents found\n                res = {\n                    updated: {\n                        documents: null,\n                        count: 0\n                    },\n                    inserted: {\n                        documents: null,\n                        count: 0\n                    }\n                };\n            }\n        } else {\n            var updatedDocs = [];\n            \n            for (var i = 0; i < docs.length; i++) {\n                var doc = docs[i];\n                \n                var override = null;\n                \n                var hasModifier = false;\n                \n                for (let key in update) {\n                    // IE7 doesn't support indexing into strings (eg, key[0] or key.indexOf('$') ), so use substr.\n                    // Testing over the first letter:\n                    //      Bests result with 1e8 loops => key[0](~3s) > substr(~5s) > regexp(~6s) > indexOf(~16s)\n                    \n                    var modifier = (key.substr(0, 1) === '$');\n                    if (modifier) {\n                        hasModifier = true;\n                    }\n                    \n                    if (options.updateAsMongo) {\n                        if (hasModifier && !modifier) this.logger.throw(\"All update fields must be an update operator\");\n                        \n                        if (!hasModifier && options.multi) this.logger.throw(\"You can not update several documents when no update operators are included\");\n                        \n                        if (hasModifier) override = false;\n                        \n                        if (!hasModifier) override = true;\n                    } else {\n                        override = !!options.override;\n                    }\n                }\n                \n                var _docUpdate = null;\n                \n                if (override) {\n                    // Overrides the document except for the \"_id\"\n                    _docUpdate = {\n                        _id: doc._id\n                    };\n                    \n                    // Must ignore fields starting with '$', '.'...\n                    for (let key in update) {\n                        if (key.substr(0, 1) === '$' || /\\./g.test(key)) {\n                            this.logger.warn(`The field ${key} can not begin with '$' or contain '.'`);\n                        } else {\n                            _docUpdate[key] = update[key];\n                        }\n                    }\n                } else {\n                    _docUpdate = _.cloneDeep(doc);\n                    \n                    for (let key in update) {\n                        let val = update[key];\n                        \n                        if (key.substr(0, 1) === '$') {\n                            _docUpdate = _applyModifier(_docUpdate, key, val);\n                        } else {\n                            if (!_.isNil(_docUpdate[key])) {\n                                if (key !== '_id') {\n                                    _docUpdate[key] = val;\n                                } else {\n                                    this.logger.warn(\"The field '_id' can not be updated\");\n                                }\n                            } else {\n                                this.logger.warn(`The document does not contains the field ${key}`);\n                            }\n                        }\n                    }\n                }\n                \n                updatedDocs.push(_docUpdate);\n                \n                let idx = this.doc_indexes[_docUpdate._id];\n                this.docs[idx] = _docUpdate;\n            }\n            \n            /**\n             * \"update\" event.\n             *\n             * @event MongoPortable~update\n             * \n             * @property {Object} collection - Information about the collection\n             * @property {Object} selector - The selection of the query\n             * @property {Object} modifier - The modifier used in the query\n             * @property {Object} docs - The updated/inserted documents information\n             */\n            this.emit(\n                'update',\n                {\n                    collection: this,\n                    selector: selection,\n                    modifier: update,\n                    docs: updatedDocs\n                }\n            );\n            \n            res = {\n                updated: {\n                    documents: updatedDocs,\n                    count: updatedDocs.length\n                },\n                inserted: {\n                    documents: null,\n                    count: 0\n                }\n            };\n        }\n        \n        \n        if (callback) callback(null, res);\n        \n        return res;\n    }\n    /**\n     * Removes one or many documents\n     * \n     * @method Collection#remove\n     * \n     * @param {Object|Array|String} [selection={}] - The selection for matching documents\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Number} [options.justOne=false] - Deletes the first occurrence of the selection\n     * @param {Object} [options.writeConcern=null] - An object expressing the write concern\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Object} Object with the deleted documents\n     */\n    remove = function (selection, options, callback) {\n        if (_.isNil(selection)) selection = {};\n        \n        if (_.isFunction(selection)) {\n            callback = selection;\n            selection = {};\n        }\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (_.isNil(options)) options = { justOne: false };\n        \n        // If we are not passing a selection and we are not removing just one, is the same as a drop\n        if (getObjectSize(selection) === 0 && !options.justOne) return this.drop(options, callback);\n        \n        // Check special case where we are using an objectId\n        if(selection instanceof ObjectId) {\n            selection = {\n                _id: selection\n            };\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        var cursor = this.find(selection);\n        \n        var docs = [];\n        cursor.forEach(doc => {\n            var idx = this.doc_indexes[doc._id];\n            \n            delete this.doc_indexes[doc._id];\n            this.docs.splice(idx, 1);\n            \n            docs.push(doc);\n        });\n        \n        /**\n         * \"remove\" event.\n         *\n         * @event MongoPortable~remove\n         * \n         * @property {Object} collection - Information about the collection\n         * @property {Object} selector - The selection of the query\n         * @property {Object} docs - The deleted documents information\n         */\n        this.emit(\n            'remove',\n            {\n                collection: this,\n                selector: selection,\n                docs: docs\n            }\n        );\n        \n        if (callback) callback(null, docs);\n        \n        return docs;\n    }\n    \n    /**\n     * Alias for {@link Collection#remove}\n     * \n     * @method Collection#delete\n     */\n    delete = function (selection, options, callback) {\n        return this.remove(selection, options, callback);\n    }\n     \n     /**\n     * Alias for {@link Collection#remove}\n     * \n     * @method Collection#destroy\n     */\n    destroy = function (selection, options, callback) {\n        return this.remove(selection, options, callback);\n    }\n    \n    /**\n     * Drops a collection\n     * \n     * @method Collection#drop\n     * \n     * @param {Object} [options] - Additional options\n     * \n     * @param {Number} [options.dropIndexes=false] - True if we want to drop the indexes too\n     * @param {Object} [options.writeConcern=null] - An object expressing the write concern\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Object} True when the collection is dropped\n     */\n    drop = function(options, callback) {\n        if (_.isNil(options)) options = {};\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        this.doc_indexes = {};\n        this.docs = [];\n        \n        if (options.dropIndexes) {} // TODO\n        \n        this.emit(\n            'dropCollection',\n            {\n                collection: this,\n                indexes: !!options.dropIndexes\n            }\n        );\n        \n        if (callback) callback(null, true);\n        \n        return true;\n    }\n    \n    /**\n     * Insert or update a document. If the document has an \"_id\" is an update (with upsert), if not is an insert.\n     * \n     * @method Collection#save\n     * \n     * @param {Object} doc - Document to be inserted/updated\n     * \n     * @param {Number} [options.dropIndexes=false] - True if we want to drop the indexes too\n     * @param {Object} [options.writeConcern=null] - An object expressing the write concern\n     * \n     * @param {Function} [callback=null] - Callback function to be called at the end with the results\n     * \n     * @returns {Object} True when the collection is dropped\n     */\n    save = function(doc, options, callback) {\n        if (_.isNil(doc) || _.isFunction(doc)) this.logger.throw(\"You must pass a document\");\n        \n        if (_.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n    \n        if (_.hasIn(doc, '_id')) {\n            options.upsert = true;\n            \n            return this.update(\n                { _id: doc._id },\n                doc,\n                options,\n                callback\n            );\n        } else {\n            return this.insert(doc, options, callback);\n        }\n    }\n    \n    /**\n    * @ignore\n    */\n    ensureIndex = function() {\n        //TODO Implement EnsureIndex\n        this.logger.throw('Collection#ensureIndex unimplemented by driver');\n    };\n    \n    // TODO document (at some point)\n    // TODO test\n    // TODO obviously this particular implementation will not be very efficient\n    /**\n    * @ignore\n    */\n    backup = function (backupID, callback) {\n        if (_.isFunction(backupID)) {\n            callback = backupID;\n            backupID = new ObjectId().toString();\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n    \n        this.snapshots[backupID] = _.cloneDeep(this.docs);\n        this.emit(\n            'snapshot',\n            {\n                collection: this,\n                backupID: backupID,\n                documents: this.snapshots[backupID] \n            }\n        );\n    \n        var result = {\n            backupID: backupID,\n            documents: this.snapshots[backupID]\n        };\n        \n        if (callback) callback(null, result);\n    \n        return result;\n    }\n    \n    // Lists available Backups\n    /**\n    * @ignore\n    */\n    backups = function (callback) {\n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        var backups = [];\n    \n        for (let id in this.snapshots) {\n            backups.push({id: id, documents: this.snapshots[id]});\n        }\n    \n        if (callback) callback(null, backups);\n    \n        return backups;\n    }\n    \n    // Lists available Backups\n    /**\n    * @ignore\n    */\n    removeBackup = function (backupID, callback) {\n        if (_.isFunction(backupID)) {\n            callback = backupID;\n            backupID = null;\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        let result = false;\n        \n        if (backupID) {\n            delete this.snapshots[_.toString(backupID)];\n            \n            result = backupID;\n        } else {\n            this.snapshots = {};\n            \n            result = true;\n        }\n        \n        if (callback) callback(null, result);\n    \n        return result;\n    }\n    \n    \n    // Restore the snapshot. If no snapshot exists, raise an exception;\n    /**\n    * @ignore\n    */\n    restore = function (backupID, callback) {\n        if (_.isFunction(backupID)) {\n            callback = backupID;\n            backupID = null;\n        }\n        \n        if (!_.isNil(callback) && !_.isFunction(callback)) this.logger.throw(\"callback must be a function\");\n        \n        var snapshotCount = getObjectSize(this.snapshots);\n        var backupData = null;\n    \n        if (snapshotCount === 0) {\n            this.logger.throw(\"There is no snapshots\");\n        } else {\n            if (!backupID) {\n                if (snapshotCount === 1) {\n                    this.logger.info(\"No backupID passed. Restoring the only snapshot\");\n                    \n                    // Retrieve the only snapshot\n                    for (let key in this.snapshots) backupID = key;\n                } else {\n                    this.logger.throw(\"The are several snapshots. Please specify one backupID\");\n                }\n            }\n        }\n        \n        backupData = this.snapshots[backupID];\n                \n        if (!backupData) {\n            this.logger.throw(`Unknown Backup ID: ${backupID}`);\n        }\n    \n        this.docs = backupData;\n        this.emit(\n            'restore',\n            {\n                collection: this,\n                backupID: backupID\n            }\n        );\n    \n        if (callback) callback(null);\n    \n        return this;\n    }\n    \n    /**\n     * Calculates aggregate values for the data in a collection\n     * \n     * @method Collection#aggregate\n     * \n     * @param {Array} pipeline - A sequence of data aggregation operations or stages\n     * @param {Object} [options] - Additional options\n     * \n     * @param {Boolean} [options.forceFetch=false] - If set to'\"true\" returns the array of documents already fetched\n     * \n     * @returns {Array|Cursor} If \"options.forceFetch\" set to true returns the array of documents, otherwise returns a cursor\n     */\n    aggregate = function(pipeline, options = { forceFetch: false }) {\n        if (_.isNil(pipeline) || !_.isArray(pipeline)) this.logger.throw('The \"pipeline\" param must be an array');\n        \n        var aggregation = new Aggregation(pipeline);\n        \n        for (let i = 0; i < pipeline.length; i++) {\n            let stage = pipeline[i];\n            \n            for (let key in stage) {\n                if (key.substr(0, 1) !== '$') this.logger.throw(\"The pipeline stages must begin with '$'\");\n                \n                if (!aggregation.validStage(key)) this.logger.throw(`Invalid stage \"${key}\"`);\n                \n                break;\n            }\n        }\n        \n        var result = aggregation.aggregate(this);\n        \n        return result;  // change to cursor\n    }\n    \n    /**\n    * @ignore\n    */\n    rename = function(newName) {\n        if (_.isString(newName)) {\n            if (this.name !== newName) {\n                Collection.checkCollectionName(newName);\n                \n                var dbName = this.name.split('.').length > 1 ? this.name.split('.')[0] : '';\n                \n                this.name = newName;\n                this.fullName = dbName + '.' + this.name;\n                \n                return this;\n            }\n        } else {\n            // Error\n        }\n    }\n    \n    \n}\n\nvar _applyModifier = function(_docUpdate, key, val) {\n    var doc = _.cloneDeep(_docUpdate);\n    // var mod = _modifiers[key];\n                        \n    if (!_modifiers[key]) {\n        JSWLogger.instance.throw(`Invalid modifier specified: ${key}`);\n    }\n    \n    for (var keypath in val) {\n        var value = val[keypath];\n        var keyparts = keypath.split('.');\n        \n        _modify(doc, keyparts, value, key);\n        \n        // var no_create = !!Collection._noCreateModifiers[key];\n        // var forbid_array = (key === \"$rename\");\n        // var target = Collection._findModTarget(_docUpdate, keyparts, no_create, forbid_array);\n        // var field = keyparts.pop();\n\n        // mod(target, field, value, keypath, _docUpdate);\n    }\n    \n    return doc;\n};\n\nvar _modify = function(document, keyparts, value, key, level = 0) {\n    for (let i = level; i < keyparts.length; i++) {\n        let path = keyparts[i];\n        let isNumeric = /^[0-9]+$/.test(path);\n        let target = document[path];\n        \n        var create = _.hasIn(Collection._noCreateModifiers, key) ? false : true;\n        if (!create && (!_.isObject(document) || _.isNil(target))) {\n            JSWLogger.instance.throw(`The element \"${path}\" must exists in \"${JSON.stringify(document)}\"`);\n        }\n        \n        if (_.isArray(document)) {\n            // Do not allow $rename on arrays\n            if (key === \"$rename\") return null;\n            \n            // Only let the use of \"arrayfield.<numeric_index>.subfield\"\n            if (isNumeric) {\n                path = _.toNumber(path);\n            } else {\n                JSWLogger.instance.throw(`The field \"${path}\" can not be appended to an array`);\n            }\n            \n            // Fill the array to the desired length\n            while (document.length < path) {\n                document.push(null);\n            }\n        }\n        \n        if (i < keyparts.length - 1) {\n            if (_.isNil(target)) {\n                // If we are accessing with \"arrayField.<numeric_index>\"\n                if (_.isFinite(_.toNumber(keyparts[i + 1]))) {  //  || keyparts[i + 1] === '$'  // TODO \"arrayField.$\"\n                    target = [];\n                } else {\n                    target = {};\n                }\n            }\n            \n            document[path] = _modify(target, keyparts, value, key, level + 1);\n\n            return document;\n        } else {\n            _modifiers[key](document, path, value);\n            \n            return document;\n        }\n    }\n};\n\n\n\n\n\n/**\n* @ignore\n*/\nvar _modifiers = {\n    $inc: function (target, field, arg) {\n        if (!_.isNumber(arg)) {\n            JSWLogger.instance.throw(\"Modifier $inc allowed for numbers only\");\n        }\n\n        if (field in target) {\n            if (!_.isNumber(target[field])) {\n                JSWLogger.instance.throw(\"Cannot apply $inc modifier to non-number\");\n            }\n\n            target[field] += arg;\n        } else {\n            target[field] = arg;\n        }\n    },\n\n    $set: function (target, field, arg) {\n        target[field] = _.cloneDeep(arg);\n    },\n\n    $unset: function (target, field, arg) {\n        if (!_.isNil(target)) {\n            if (_.isArray(target)) {\n                if (field in target) {\n                    target[field] = null;\n                }\n            } else {\n                delete target[field];\n            }\n        }\n    },\n\n    $push: function (target, field, arg) {\n        var x = target[field];\n\n        if (_.isNil(x)) {\n            target[field] = [arg];\n        } else if (!_.isArray(x)) {\n            JSWLogger.instance.throw(\"Cannot apply $push modifier to non-array\");\n        } else {\n            x.push(_.cloneDeep(arg));\n        }\n    },\n\n    $pushAll: function (target, field, arg) {\n        var x = target[field];\n\n        if (_.isNil(x)) {\n            target[field] = arg;\n        } else if (!_.isArray(x)) {\n            JSWLogger.instance.throw(\"Modifier $pushAll/pullAll allowed for arrays only\");\n        } else {\n            for (var i = 0; i < arg.length; i++) {\n                x.push(arg[i]);\n            }\n        }\n    },\n\n    $addToSet: function (target, field, arg) {\n        var x = target[field];\n\n        if (_.isNil(x)) {\n            target[field] = [arg];\n        } else if (!_.isArray(x)) {\n            JSWLogger.instance.throw(\"Cannot apply $addToSet modifier to non-array\");\n        } else {\n            let isEach = false;\n            if (_.isPlainObject(arg)) {\n                for (let k in arg) {\n                    if (k === \"$each\") {\n                        isEach = true;\n                    }\n                    \n                    break;\n                }\n            }\n\n            let values = isEach ? arg[\"$each\"] : [arg];\n            _.forEach(values, function (value) {\n                for (let i = 0; i < x.length; i++) {\n                    if (SelectorMatcher.equal(value, x[i])) return;\n                }\n\n                x.push(value);\n            });\n        }\n    },\n\n    $pop: function (target, field, arg) {\n        if (_.isNil(target) || _.isNil(target[field])) return;\n\n        var x = target[field];\n\n        if (!_.isArray(x)) {\n            JSWLogger.instance.throw(\"Cannot apply $pop modifier to non-array\");\n        } else {\n            if (_.isNumber(arg) && arg < 0) {\n                x.splice(0, 1);\n            } else {\n                x.pop();\n            }\n        }\n    },\n\n    $pull: function (target, field, arg) {\n        if (_.isNil(target) || _.isNil(target[field])) return;\n\n        var x = target[field];\n\n        if (!_.isArray(x)) {\n            JSWLogger.instance.throw(\"Cannot apply $pull/pullAll modifier to non-array\");\n        } else {\n            var out = [];\n            \n            if (typeof arg === \"object\" && !(arg instanceof Array)) {\n                // XXX would be much nicer to compile this once, rather than\n                // for each document we modify.. but usually we're not\n                // modifying that many documents, so we'll let it slide for\n                // now\n\n                // XXX _compileSelector isn't up for the job, because we need\n                // to permit stuff like {$pull: {a: {$gt: 4}}}.. something\n                // like {$gt: 4} is not normally a complete selector.\n                var match = new Selector({\n                    \"__matching__\": arg\n                });\n                for (var i = 0; i < x.length; i++) {\n                    var _doc_ = {\n                        __matching__: x[i]\n                    };\n                    if (!match.test(_doc_)) {\n                        out.push(x[i]);\n                    }\n                }\n            } else {\n                for (var i = 0; i < x.length; i++) {\n                    if (!SelectorMatcher.equal(x[i], arg)) {\n                        out.push(x[i]);\n                    }\n                }\n            }\n\n            target[field] = out;\n        }\n    },\n\n    $pullAll: function (target, field, arg) {\n        if (_.isNil(target) || _.isNil(target[field])) return;\n\n        var x = target[field];\n\n        if (!_.isNil(x) && !_.isArray(x)) {\n            JSWLogger.instance.throw(\"Modifier $pushAll/pullAll allowed for arrays only\");\n        } else if (!_.isNil(x)) {\n            var out = [];\n\n            for (var i = 0; i < x.length; i++) {\n                var exclude = false;\n\n                for (var j = 0; j < arg.length; j++) {\n                    if (SelectorMatcher.equal(x[i], arg[j])) {\n                        exclude = true;\n                        \n                        break;\n                    }\n                }\n\n                if (!exclude) {\n                    out.push(x[i]);\n                }\n            }\n\n            target[field] = out;\n        }\n    },\n\n    $rename: function (target, field, value) {\n        if (field === value) {\n            // no idea why mongo has this restriction..\n            JSWLogger.instance.throw(\"The new field name must be different\");\n        }\n\n        if (!_.isString(value) || value.trim() === '') {\n            JSWLogger.instance.throw(\"The new name must be a non-empty string\");\n        }\n\n        target[value] = target[field];\n        delete target[field];\n    },\n\n    $bit: function (target, field, arg) {\n        // XXX mongo only supports $bit on integers, and we only support\n        // native javascript numbers (doubles) so far, so we can't support $bit\n        JSWLogger.instance.throw(\"$bit is not supported\");\n    }\n};\n\n\n\n\n\nvar _ensureFindParams = function(params) {\n    // selection, fields, options, callback\n    if (_.isNil(params.selection)) params.selection = {};\n\n    if (_.isNil(params.selection)) params.selection = {};\n\n    if (_.isNil(params.fields)) params.fields = [];\n\n    if (_.isNil(params.options)) {\n        params.options = {\n            skip: 0,\n            limit: 15 // for no limit pass [options.limit = -1]\n        };\n    }\n\n    // callback as first parameter\n    if (_.isFunction(params.selection)) {\n        params.callback = params.selection;\n        params.selection = {};\n    }\n\n    // callback as second parameter\n    if (_.isFunction(params.fields)) {\n        params.callback = params.fields;\n        params.fields = [];\n    }\n\n    // callback as third parameter\n    if (_.isFunction(params.options)) {\n        params.callback = params.options;\n        params.options = {};\n    }\n\n    // Check special case where we are using an objectId\n    if (params.selection instanceof ObjectId) {\n        params.selection = {\n            _id: params.selection\n        };\n    }\n\n    if (!_.isNil(params.callback) && !_.isFunction(params.callback)) {\n        JSWLogger.instance.throw(\"callback must be a function\");\n    }\n\n    if (params.options.fields) {\n        if (_.isNil(params.fields) || params.fields.length === 0) {\n            params.fields = params.options.fields;\n        } else {\n            JSWLogger.instance.warn(\"Fields already present. Ignoring 'options.fields'.\");\n        }\n    }\n    \n    return params;\n};\n\nexport { Collection };"]}