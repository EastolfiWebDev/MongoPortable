{"version":3,"sources":["utils/Utils.ts"],"names":[],"mappings":";AAAA,0BAA4B;AAE5B;IAAA;IAqBA,CAAC;IApBU,0BAAoB,GAA3B,UAA4B,GAAG,EAAE,QAAQ,EAAE,OAAO;QAC9C,yDAAyD;QACzD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,uCAAuC;QACvC,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,sCAAsC;QACtC,yCAAyC;QACzC,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC7B,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,YAAC;AAAD,CArBA,AAqBC,IAAA;AAEQ,sBAAK","file":"Utils.js","sourcesContent":["import * as _ from \"lodash\";\n\nclass Utils {\n    static renameObjectProperty(obj, property, newName) {\n        // Do nothing if some name is missing or is not an string\n        if (!_.isString(property) || !_.isString(newName)) {\n            return obj;\n        }\n        \n        // Do nothing if the names are the same\n        if (property == newName) {\n            return obj;\n        }\n        \n        // Check for the old property name to \n        // avoid a ReferenceError in strict mode.\n        if (obj.hasOwnProperty(property)) {\n            obj[newName] = obj[property];\n            delete obj[property];\n        }\n        \n        return obj;\n    }\n}\n\nexport { Utils };"]}